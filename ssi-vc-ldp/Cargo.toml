[package]
name = "ssi-vc-ldp"
version = "0.3.2"
edition = "2021"
authors = ["Spruce Systems, Inc."]
license = "Apache-2.0"
description = "Verifiable Credential Data Integrity 1.0 implementation for the `ssi` library."
repository = "https://github.com/spruceid/ssi/"
documentation = "https://docs.rs/ssi-ldp/"

[features]
# Default features.
default = ["w3c", "ed25519", "rsa", "secp256k1", "secp256r1", "thezos", "eip712", "aleo", "solana"]

# Enables signature suites specified by the W3C.
w3c = ["ssi-eip712"]

# Enables signature suites based on ED25519:
# - `Ed25519Signature2018`
# - `Ed25519Signature2020`
# - `EdDsa2022`
ed25519 = ["ssi-verification-methods/ed25519"]

# Enables signature suites based on secp256k1:
# - `EcdsaSecp256k1Signature2019`
secp256k1 = ["ssi-verification-methods/secp256k1", "k256"]

# Enables signature suites based on secp256r1:
# - `EcdsaSecp256r1Signature2019`
secp256r1 = ["ssi-verification-methods/secp256r1", "p256"]

# Enables `RsaSignature2018`
rsa = ["ssi-verification-methods/rsa"]

# Enables all the thezos signatures suites:
# - `Ed25519BLAKE2BDigestSize20Base58CheckEncodedSignature2021`
# - `P256BLAKE2BDigestSize20Base58CheckEncodedSignature2021`
# - `ThezosJcsSignature2021`
# - `ThezosSignature2021`
thezos = ["serde_json", "serde_jcs", "ssi-tzkey"]

# Enables `AleoSignature2021`
aleo = ["ssi-jwk/aleo", "ssi-verification-methods/aleo"]

# Enables `Eip712Signature2021`
eip712 = ["ssi-eip712"]

# Enables `SolanaSignature2021`
solana = ["ssi-verification-methods/solana"]

# Enables `EthereumPersonalSignature2021`
ethereum = []

[dependencies]
ssi-verification-methods.workspace = true
async-trait.workspace = true
rdf-types.workspace = true
xsd-types.workspace = true
# treeldr-rust-prelude.workspace = true
linked-data = { workspace = true, features = ["derive"] }
ssi-core.workspace = true
ssi-crypto.workspace = true
ssi-jwk.workspace = true
ssi-jws.workspace = true
ssi-rdf.workspace = true
ssi-vc.workspace = true
ssi-security.workspace = true
ssi-tzkey = { workspace = true, optional = true }
ssi-eip712 = { workspace = true, optional = true }
ssi-caips.workspace = true
chrono.workspace = true
multibase.workspace = true
iref.workspace = true
thiserror.workspace = true
static-iref.workspace = true
json-ld.workspace = true
locspan.workspace = true
grdf.workspace = true
hex.workspace = true
serde = { workspace = true, features = ["derive"] }
pin-project.workspace = true
derivative.workspace = true
futures.workspace = true
self_cell = "1.0.1"

ed25519-dalek = { version = "1", optional = true }
k256 = { version = "0.11", optional = true, features = ["ecdsa", "sha256"] }
p256 = { version = "0.11", optional = true, features = ["ecdsa"] }
p384 = { version = "0.11", optional = true, features = ["ecdsa"] }
sha2 = { version = "0.10", optional = true }

# only needed by non LD suites.
serde_json = { workspace = true, optional = true }
serde_jcs = { workspace = true, optional = true }

[dev-dependencies]
async-std = { version = "1.9", features = ["attributes"] }
# treeldr-rust-macros.workspace = true
static-iref.workspace = true
rand = "0.7"
hashbrown = "0.13.0"
iref = { workspace = true, features = ["hashbrown"] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
